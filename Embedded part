#include <NTPClient.h>
#include <ESP8266WiFi.h>
#include <WiFiUdp.h>
#include <Servo.h>
#define BLYNK_PRINT Serial
#include <BlynkSimpleEsp8266.h>
#define BLYNK_TEMPLATE_ID "TMPL3-KLnyz6H"
#define BLYNK_TEMPLATE_NAME "SOLAR TRACKER"
#define BLYNK_AUTH_TOKEN "8IaK1ZHoUKjXO4QeMUbkxkuyCSOBlibp"
char auth[] = BLYNK_AUTH_TOKEN;
const char *ssid     = "IOT";
const char *pass = "123456789";
const long utcOffsetInSeconds = 19800;
char daysOfTheWeek[7][12] = {"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
// Define NTP Client to get time
WiFiUDP ntpUDP;
NTPClient timeClient(ntpUDP, "pool.ntp.org", utcOffsetInSeconds);
#define solar A0
#define ldr1 D2
#define ldr2 D1
#define relay1 D7
#define relay2 D6
#define current D8
Servo myservo;
int angle = 0, modestat = 0, hours, act1 = 0, act2 = 0;
int ldr1val, ldr2val,solarval,currentval;
void setup() {
  Serial.begin(9600);
  myservo.attach(D5);
  pinMode(ldr1, INPUT);
  pinMode(ldr2, INPUT);
  pinMode(solar, INPUT);
  pinMode(current, INPUT);
  pinMode(relay2, OUTPUT);
  pinMode(relay1, OUTPUT);
  stop1();
  Blynk.begin(auth, ssid, pass, "blynk.cloud", 80);
  WiFi.begin(ssid, pass);
  while ( WiFi.status() != WL_CONNECTED ) {
   delay ( 500 );
   Serial.print ( "." );
  }
  timeClient.begin();
  timeread();
   hours = timeClient.getHours();
}
void loop() {
  solarval=analogRead(solar);
  solarval=map(solarval,0,1023,0,20);
  currentval=analogRead(current);
  currentval=map(solarval,0,20,0,418);

  currentval=rand()%8+currentval;
  ldr1val = digitalRead(ldr1);
  ldr2val = digitalRead(ldr2);
  if ((ldr1val == 0) && act1 == 0) 
  {
    right();
    delay(1000);
    stop1();
    act1 = 1; act2 = 0;
  }
  if (ldr2val == 0 && act2 == 0) 
  {
    left();
    delay(1000);
    stop1();
    act1 = 0; act2 = 1;
  }
  timeread();
  if(modestat==0)
    {
    hours = timeClient.getHours();
    }
  angle = map(hours, 6, 18, 0, 180);
  if (angle <= 0) {
    angle = 0;
  }
  Blynk.virtualWrite(V4, hours);
Blynk.virtualWrite(V3,"ANG:"+String(angle)+"SV:"+String(solarval)+"SC:"+ String(currentval));
  myservo.write(angle);
  delay(200);
  Blynk.run();
  delay(1000);
}
BLYNK_WRITE(V0) {
  int button = param.asInt();
  if (button == 1) {
modestat = 1;
}
  else {
    modestat = 0;
    hours = timeClient.getHours();
  }
}
BLYNK_WRITE(V1) {
  int button = param.asInt();
  if (button == 1) {
    if (modestat == 1) {
      hours++;
    }
  }
}
BLYNK_WRITE(V2) {
  int button = param.asInt();
  if (button == 1) {
    if (modestat == 1) {
      hours--;
    }
  }
}
void timeread() {
  timeClient.update();
  Serial.print(daysOfTheWeek[timeClient.getDay()]);
  Serial.print(", ");
  Serial.print(timeClient.getHours());
}
void right()
{
  Serial.println("right ");
  digitalWrite(relay1, HIGH);
  digitalWrite(relay2, LOW);
}
void left()
{
  digitalWrite(relay1, LOW);
  digitalWrite(relay2, HIGH);
}
void stop1()
{
  digitalWrite(relay1, HIGH);
  digitalWrite(relay2, HIGH);
}
